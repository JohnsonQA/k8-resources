#Its a PV which helps us to mount the data. Its a k8 wrapper/api. 
# Access Modes are explained detailed in Session 61 notes.
#PV is a kind of disk which we need to mount the data

# To mount data we need to claim PV. To claim PV we should go for PVC (Persistent Volume Claim)
#Once claim the PV which is storage or volume here
# We need to mount to any of the service
# Ex nginx. Using PVC we mount the nginx inside usr/share/nginx/html

#However if we want to go and store the data using specific pod then we can go for node selector. 
# with the help of node selector we can create a pod in the specific pod and it will attach the volumes as we have 
# associated with speific volume

#Workflow - What ever the data we save in usr/share/nginx/html it will first goes under PVC --> PV 
#and store in EBS not inside ec2 node

#IMP - If pod get deleted data still be there in volume. As we are using ebs PV and PVC. 
#Once we create pod again data would be restored from EBS

apiVersion: v1
kind: PersistentVolume
metadata:
  name: ebs-static
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 20Gi
  csi:
    driver: ebs.csi.aws.com
    fsType: ext4
    volumeHandle: vol-07ffd1ead1f2adad1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ebs-static
spec:
  storageClassName: "" #empty string must be set otherwaise default SC would be set
  volumeName: ebs-static #this is PV volume name
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
---
apiVersion: v1
kind: Pod 
metadata:
  name: nginx
  labels:
    purpose: ebs-static-demo
    project: roboshop
spec:
  containers:
  - name: nginx
    image: nginx
    volumeMounts:
    - name: persistent-storage
      mountPath: /usr/share/nginx/html
  volumes:
  - name: persistent-storage
    persistentVolumeClaim:
      claimName: ebs-static
  nodeSelector:
    topology.kubernetes.io/zone: us-east-1a
---
apiVersion: v1
kind: Service
metadata:
  name: ebs-static
  labels:
    purpose: ebs-static-demo 
    project: roboshop
spec:
  type: LoadBalancer
  selector:
    purpose: ebs-static-demo
    project: roboshop
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80